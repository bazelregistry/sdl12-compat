#  OpenWatcom makefile to build SDL for Win32

!ifndef %WATCOM
!error Environment variable WATCOM is not specified!
!endif

DLLNAME = SDL
VERSION = 1.2.50

# change SDL2INC to point to the SDL2 headers
SDL2INC = include
INCPATH = -I"$(%WATCOM)/h/nt" -I"$(%WATCOM)/h" -I"$(SDL2INC)"
LIBNAME = $(DLLNAME)

DLLFILE = $(LIBNAME).dll
LIBFILE = $(LIBNAME).lib
LNKFILE = $(LIBNAME).lnk

CFLAGS_DEF=-bt=nt -d0 -zq -bm -5s -fp5 -fpi87 -sg -oteanbmier $(INCPATH)
# we override the DECLSPEC define in begin_code.h, because we are using
# an exports file to remove the _cdecl '_' prefix from the symbol names
CFLAGS_DLL=$(CFLAGS_DEF) -bd -DDLL_EXPORT -DDECLSPEC=

# Special flags for building SDL
CFLAGS=$(CFLAGS_DLL) -otexan -wx -ei
# avoid bogus W200 from cpuid code:
CFLAGS+= -wcd=200
# newer OpenWatcom versions enable W303 by default
CFLAGS+= -wcd=303

object_files= SDL12_compat.obj
resource_obj= version.res

.extensions:
.extensions: .lib .dll .obj .c .asm .res .rc

.c.obj:
	wcc386 $(CFLAGS) -fo=$^@ $<
.rc.res:
	wrc -q -r -bt=nt -I"$(%WATCOM)/h/nt" -fo=$^@ $<

all: $(DLLFILE) $(LIBFILE) .symbolic

$(DLLFILE): compiling_info $(object_files) $(resource_obj) $(LNKFILE)
	@echo * Linking: $@
	@wlink @$(LNKFILE)

$(LIBFILE): $(DLLFILE)
	@echo * Creating LIB file: $@
	wlib -q -b -n -c -pa -s -t -zld -ii -io $* @SDL12.lbc

compiling_info : .symbolic
	@echo * Compiling...

$(LNKFILE):
	@echo * Creating linker file: $@
	@%create $@
	@%append $@ SYSTEM nt_dll INITINSTANCE TERMINSTANCE
	@%append $@ NAME $(DLLFILE)
	@for %i in ($(object_files)) do @%append $@ FILE %i
	@%append $@ EXPORT=SDL12.exports
	@%append $@ OPTION IMPF=SDL12.lbc
	@%append $@ OPTION RESOURCE=$(resource_obj)
	@%append $@ OPTION QUIET
	@%append $@ OPTION MAP=$^&.map
	@%append $@ OPTION ELIMINATE
	@%append $@ OPTION SHOWDEAD

clean: .SYMBOLIC
	@echo * Clean: $(LIBNAME) $(VERSION)
	@if exist *.obj rm *.obj
	@if exist *.res rm *.res
	@if exist *.map rm *.lbc
	@if exist *.map rm *.map
	@if exist $(LNKFILE) rm $(LNKFILE)

distclean: clean .SYMBOLIC
	@if exist *.err rm *.err
	@if exist $(DLLFILE) rm $(DLLFILE)
	@if exist $(LIBFILE) rm $(LIBFILE)
